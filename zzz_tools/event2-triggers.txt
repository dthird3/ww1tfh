##########################################################
# T R I G G E R S ########################################
##########################################################


id
Event ID number.
Syntax: id = Event_ID

major
?
Syntax: major = yes

is_triggered_only
Such event will not fire unless triggered by another event or decision.
Additional trigger conditions may still be added.
Syntax: is_triggered_only = yes

year 
Returns true if x is the current year or a later year. 
Syntax: year = x 

month 
Returns true if x is the current month or a later month. 
Syntax: month = x 

date 
Returns true if x is the current date or a later date. 
Syntax: date = x  # (yyyy.m.d)

mean_time_to_happen
An average timespan around which an event randomly fires.
Syntax: mean_time_to_happen = { months = x / days = x }

modifier
Multiplies the current mean_time_to_happen probability by x when certain conditions are met.
More modifiers for one mean_time_to_happen may be added.
Syntax: modifier = { factor = x ... }
# e.g. mean_time_to_happen will be 5 days (half of the original) during and after June:
mean_time_to_happen =  {
	days = 10
	modifier = {
		factor = 0.5
		month = 6
	}
}

ai 
Returns true if the country is handled by the AI. 
Syntax: ai = yes / no 

tag
Returns true if the current country has a country tag that matches the specified tag. 
Syntax: tag = <country tag> 



# Provinces ################################


capital 
Returns true if the specified capital is the current country’s capital. 
Syntax: capital = <province id> 

is_capital 
Returns true if the current province is a capital. 
Syntax: is_capital = yes / no 

owns 
Returns true if the country owns the specified province. 
Syntax: owns = <province id> 

owned_by 
Returns true if the specified country owns the current province. 
Syntax: owned_by = tag 

controls 
Returns true if the current country controls the specified province. 
Syntax: controls = <province id> 

controlled_by 
Returns true if the province is controlled by the specified country. 
Syntax: controlled_by = tag 

is_core 
Returns true if the specified province is a core of the current country. 
Syntax: is_core = <province id> 

units_in_province 
Returns true if there are x or more units in the current province. 
Syntax: units_in_province = x 

country_units_in_province 
Returns true if the current country has x or more units in the specified province. 
Syntax: country_units_in_province = x 

continent 
Returns true if the current province belongs to the specified continent. 
Syntax: continent = <name of continent> 

empty 
Returns true if the current province is empty. 
Syntax: empty = yes / no 

has_building 
Returns true if the current province has the specified building. 
Syntax: has_building = <building type> 

port 
Syntax: port = yes / no 
Returns true if the current province has a port. 

is_blockaded 
Returns true if the province is blockaded. 
Syntax: is_blockaded = yes / no 

nationalism 
Returns true if the nationalism value is equal to x or more. 
Syntax: nationalism = x 

province_id 
Returns true if current province has the specified ID. 
Syntax: province_id = <province id> 

region 
Returns true if the province belongs to the specified region. 
Syntax: region = <name of region> 

leadership
Returns true if the province has a leadership value equal to x or higher. 
Syntax: leadership = x



# Modifiers ################################


has_country_flag 
Returns true if the current country has the specified country. 
Syntax: has_country_flag = <name of flag> 

has_global_flag 
Returns true if any country has set a global flag. 
Syntax: has_global_flag = <name of flag> 

has_country_modifier 
Returns true if the current country has the specified modifier. 
Syntax: has_country_modifier = <name of modifer> 

has_province_modifier 
Returns true if the current province has the specified modifier. 
Syntax: has_province_modifier = <name of modifer> 

check_variable 
Returns true if the <variable name> has been set at an earlier stage and its value is 
equal to x. 
Syntax: check_variable = { 
which = <variable name> 
value = x 
} 



# National ################################


exists 
Returns true if the specified country exists. 
Syntax: exists = tag 

blockade 
Returns true if the blockade percentage is equal to x or above. 
Syntax: blockade = x 

base_neutrality
Returns true if a country’s base neutrality value is equal to x or more. 
Syntax: base_neutrality = x

neutrality 
Returns true if a country’s effective neutrality value is equal to x or more. 
Syntax: neutrality = x 

national_unity 
Returns true if the country’s national unity is equal to x or more. 
Syntax: national_unity = x 

dissent 
Returns true if a country’s dissent value is equal to x or more. 
Syntax: dissent = x 

manpower 
Returns true if the country / province has a manpower value equal to x or higher. 
Syntax: manpower = x 

manpower_percentage 
Returns true if the country has a manpower percentage of x or above. 
Syntax: manpower_percentage = x 

max_manpower 
Returns true if the country’s maximum manpower is equal to x or higher. 
Syntax: max_manpower = x 
 
max_manpower_greater_than 
Returns true if the country’s maximum number of manpower is equal to x or more. 
Syntax: max_manpower_greater_than = x 

government 
Returns true if the country has the specified government type. 
Syntax: government = <government type> 

government positions 
Verifies that a certain minister has been appointed to a certain position. 
Syntax:  
head_of_state = <minister id>
head_of_government = <minister id>
foreign_minister = <minister id>
armament_minister = <minister id>
minister_of_security = <minister id>
minister_of_intelligence = <minister id>
chief_of_staff = <minister id>
chief_of_army = <minister id>
chief_of_navy = <minister id>
chief_of_air = <minister id>

minister_alive 
Returns true if the specified minister is active. 
Syntax: minister_alive = <minister id>

has_removable_minister
If the minister can be replaced in his position.
Syntax: has_removable_minister = yes / no

organisation 
Returns true if a country’s ruling party has an organisation value equal to x or more. 
Syntax: organisation = x 

popularity 
Returns true if the country’s ruling party has a popularity value equal to x or more. 
Syntax: popularity = x 

has_leader 
Returns true if the country has the specified leader. 
Syntax: has_leader = <name of leader>

unit_has_leader 
Returns true if any unit in the current country has a leader. 
Syntax: unit_has_leader = yes / no 

government_in_exile 
Returns true if the specified country has a government in exile. 
Syntax: government_in_exile = yes / no 

ideology 
Returns true if the country’s ruling party belongs to the specified ideology. 
Syntax: ideology = <ideology type>

ideology_group 
Returns true if the country’s ruling party belongs to the specified ideology group. 
Syntax: ideology_group = <ideology group name>

lost_national 
Returns true if the number of core provinces that a country has lost is equal to x or more. 
Syntax: lost_national = x 

surrender_progress
Unlike the lost_national, this checks directly for surrender progress.
Since FTM 3.05, the surrender formula is counted as CoreStillControlledVPs / OwnedVPs;
i.e. the x per cent loss of victory points located in provinces,
which the current country has both cores and ownership of
Syntax: surrender_progress = x

lost_IC 
Returns true if the number of IC that a country has lost is equal to x or more. 
Syntax: lost_IC = x 

num_of_cities 
Returns true if the country has x or more cities. 
Syntax: num_of_cities = x 

num_of_convoys 
Returns true if the number of convoys belonging to a country is equal to x or more. 
Syntax: num_of_convoys = x 

num_of_ports 
Returns true if the country has x or more ports. 
Syntax: num_of_ports = x 

total_num_of_ports 
Returns true if the total number of ports a country has is equal to x or more. 
Syntax: total_num_of_ports = x 

num_of_revolts 
Returns true if there are x or more revolts in the country. 
Syntax: num_of_revolts = x 

revolt_percentage 
Returns true if the percentage of revolts in the country is equal to x or higher. 
Syntax: revolt_percentage = x 

strat_allies_impact 
Returns true if the strategic impact from allies is equal to x or more. 
Syntax: strat_allies_impact =  x 

strat_bomb_impact 
Returns true if the strategic impact from bombing is equal to x or more. 
Syntax: strat_bomb_impact =  x 

strat_convoy_impact 
Returns true if the strategic impact from a convoy is equal to x or more. 
Syntax: strat_convoy_impact =  x 

total_amount_of_brigades
Returns true if the number of brigades belonging to a country is equal to x or more. 
Syntax: total_amount_of_brigades = x 

total_amount_of_divisions 
Returns true if the number of divisions belonging to a country is equal to x or more. 
Syntax: total_amount_of_divisions = x 

total_defensives 
Returns true if the number of defensive battles a country is currently involved in is 
equal to x or more. 
Syntax: total_defensives = x 

total_offensives 
Returns true if the number of offensive battles a country is currently involved in is 
equal to x or more. 
Syntax: total_defensives = x 

total_amount_of_planes 
Returns true if the number of planes belonging to a country is equal to x or more. 
Syntax: total_amount_of_planes = x 

total_we_bomb 
Returns true if the number of provinces we are currently bombing is equal to x or 
more. 
Syntax: total_we_bomb = x 

total_amount_of_ships 
Returns true if the number of ships belonging to a country is equal to x or more. 
Syntax: total_amount_of_ships = x 

total_sea_battles 
Returns true if the number of sea battles currently undertaken is equal to x or more. 
Syntax: total_sea_battles = x 

total_of_ours_sunk 
Returns true if the number of sunken ships belonging to the current country is equal 
to x or more. 
Syntax: total_of_ours_sunk = x 

total_sunk_by_us 
Returns true if the total number of ships sunk by the current country is equal to x or 
more. 
Syntax: total_sunk_by_us = x 

brigade_exists
Returns true if a brigade with the given name exists.
Syntax: brigade_exists = <name>

brigade_in_combat
Returns true if said brigade is currently in combat.
Syntax: brigade_in_combat = <name>

unit_in_battle 
Returns true if the country has any unit that is fighting a battle. 
Syntax: unit_in_battle = yes / no 

total_ic 
Returns true if the total amount of ic a country has is equal to x or more. 
Syntax: total_ic = x 

war_exhaustion 
Returns true if the country’s war exhaustion is equal to x or above. 
Syntax: war_exhaustion = x 



# International ################################


alliance_with 
Returns true if the country is allied with the specified country. 
Syntax: alliance_with = tag / this / from 

faction 
Returns true if a country belongs to the specified faction. 
Syntax: faction = axis /allies / comintern 

is_in_any_faction 
Returns true if a country is a member of a faction. 
Syntax: is_in_any_faction = yes / no 

faction_progress 
Returns true if the victory progress of the current faction is equal to x percent or 
more. 
Syntax: faction_progress = x   # (x = 1..)

num_in_faction 
Returns true if the number of members belonging to the same faction as the current 
country is equal to x or more. 
Syntax: num_in_faction = x 

num_of_allies 
Returns true if the number of allies equals x or more. 
Syntax: num_of_allies = x 

guarantee 
Returns true if the specified country is guaranteeing the independence of the current 
country. 
Syntax: guarantee = tag 

non_aggression_pact 
Returns true if the specified country has a non-aggression pact with the current 
country. 
Syntax: non_aggression_pact = tag 

is_subject 
Returns true if the current country is a puppet. 
Syntax: is_subject = yes / no 

vassal_of 
Returns true if the current country is a puppet state to the specified country. 
Syntax: vassal_of = tag / this / from 

is_possible_vassal 
Returns true if the specified country can be released as a puppet state. 
Syntax: is_possible_vassal = yes / no 

can_create_vassals 
Returns true if the current country can create a puppet state. 
Syntax: can_create_vassals = yes / no 

num_of_vassals 
Returns true if the number of puppets a country has is equal to x or more. 
Syntax: num_of_vassals = x 

is_threatened 
Returns true if the country feels threatened. 
Syntax: is_threatened = yes / no 

threat 
Returns true if the threat value is equal to x or more. 
Syntax: threat = x 

military_access 
Returns true if the specified country has military access to the current country. 
Syntax: military_access = tag 

neighbor 
Returns true if the current country is a neighbour to the specified country. 
Syntax: neighbor = tag 

relation 
Returns true if the specified country has a relation value equal to y or higher with the 
specified country. 
Syntax: relation = { who = tag value = y } 

war 
Returns true if the current country is at war. 
Syntax: war = yes / no 

war_with 
Returns true if the current country is at war with the specified country. 
Syntax: war_with = tag 

truce_with 
Returns true if the current country has a truce with the specified country. 
Syntax: truce_with = tag / this / from 

has_wargoal
Checks if current country has any wargoals set against tag country.
Syntax: has_wargoal = tag



# Resources ################################



crude_oil 
Returns true if the amount of crude oil a country has is equal to x or more. 
Syntax: crude_oil = x 

energy 
Returns true if the amount of energy a country has is equal to x or more. 
Syntax: energy = x 

metal 
Returns true if the amount of metal a country has is equal to x or more. 
Syntax: metal = x 

money 
Returns true if the amount of money a country has is equal to x or more. 
Syntax: money = x 

rare_materials 
Returns true if the amount of rare materials a country has is equal to x or more. 
Syntax: rare_materials = x 

supplies 
Returns true if the amount of supplies a country has is equal to x or more. 
Syntax: supplies = x 

fuel 
Returns true if the amount of fuel a country has is equal to x or more. 
Syntax: fuel = x 

strategic_resource
A trigger to check if a country/province has a specific resource.
Syntax: strategic_resource = <resource_name>

has_strategic_resource
A trigger to check if a province has any strategic resource.
Syntax: has_strategic_resource = yes / no



##########################################################
# S C O P E S ############################################
##########################################################


and
All parts of the group are valid.
Syntax: and = { ... } 

or
At least one part of the group is valid.
Syntax: or = { ... } 

not
No parts of the group are valid.
Syntax: not = { ... } 

country tag
The specified country. 
Syntax: tag  = { effects… } 

FROM 
The country that triggered the current event. 
Syntax: FROM  = { effects… } 

THIS 
The current country. 
Syntax: THIS  = { effects… } 

limit
Limits the given scope to more narrow conditions.
Syntax: limit = { ... } 
# for example - an event 500 will fire for any/every country in Axis:
any_country = {	
	limit = {
		faction = axis
	}
	country_event = 500
}



# Triggers ################################


any_neighbor_country 
Any country neighboring the current country. 
Syntax: any_neighbor_country = { triggers… } 

any_neighbor_province 
Any province neighboring the current province. 
Syntax: any_neighbor_province = { triggers… } 

any_owned_province 
Any owned province. 
Syntax: any_owned_province = { triggers… } 

any_core 
Any province that is a core of the current country. 
Syntax: any_core = { triggers… } 



# Effects ################################


any_country 
Any available country. 
Syntax: any_country = { effects… } 

random_country 
Picks a random country. 
Syntax: random_country = { effects… } 

any_neighbor_country 
Any country neighboring the current country. 
Syntax: any_neighbor_country = { effects… } 

any_neighbor_province 
Any province neighboring the current province. 
Syntax: any_neighbor_province = { effects… } 

any_owned 
Any owned province. 
Syntax: any_owned = { effects… } 

random_owned 
Picks a random province. 
Syntax: random_owned = { effects… } 

owner 
The current owner of the province. 
Syntax: owner  = { effects… } 

controller 
The country currently controlling the province. 
Syntax: controller  = { effects… } 

capital_scope 
Capital of the current country. 
Syntax: capital_scope = { effects… } 

province id
The specified province. 
Syntax: <province id>  = { effects… } 

region name
The specified region. 
Syntax: <region name>  = { effects… } 

random_neighbor_province 
Picks a random province neighboring the current province. 
Syntax: random_neighbor_province = { effects… } 

random_empty_neighbor_province 
Picks a random empty province neighboring the current province. 
Syntax: random_empty_neighbor_province = { effects… } 


